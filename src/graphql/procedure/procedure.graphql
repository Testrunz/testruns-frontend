import { gql } from '@apollo/client';

export const POST_PROCEDURE = gql`

mutation Create_procedure(
        $name: String!
        $organisationId: String!
        $departmentId: [String]!
        $laboratoryId: [String]!
        $createdBy: String!
        $procedureDetials: String!
       
        ) {
    create_procedure(
        name: $name
        organisationId: $organisationId
        departmentId: $departmentId
        laboratoryId: $laboratoryId
        createdBy: $createdBy
        procedureDetials: $procedureDetials
    ) {
        _id
        name
        procedureNumber
        procedureDetials
        assectId
        userId
        isActive
        isDeleted
        createdAt
        updatedAt
    }
}
`;

export const GET_PROCEDURE = gql`
query Get_all_procedures($page: Int!, $perPage: Int!, $sortBy: String, $sortOrder: String, $searchBy: String, $search: String) {
    get_all_procedures(page: $page, perPage: $perPage, sortBy: $sortBy, sortOrder: $sortOrder, searchBy: $searchBy, search: $search) {
        Procedures {
            _id
            name
            procedureNumber
            procedureDetials
            assectId
            userId
            isActive
            isDeleted
            createdAt
            updatedAt
            departmentId {
                _id
                name
                departmentNumber
                organisationID
                status
                isActive
                isDeleted
                createdAt
                updatedAt
            }
            laboratoryId {
                _id
                name
                userId
                departmentId
                isActive
                isDeleted
                createdAt
                updatedAt
            }
        }
        pageInfo {
            currentPage
            totalPages
            totalCount
            hasNextPage
            hasPreviousPage
        }
    }
}
`;

export const DELETE_PROCEDURE = gql`
mutation Delete_procedure($_id:[String]!) {
    delete_procedure(_id: $_id ) {
        data
    }
}
`;

export const GET_SINGLE_PROCEDURE = gql`
query Get_procedure($_id: String!) {
    get_procedure(_id: $_id) {
        _id
        name
        procedureNumber
        procedureDetials
        assectId
        userId
        isActive
        isDeleted
        createdAt
        updatedAt
    }
}
`;
export const UPDATE_PROCEDURE = gql`
mutation Update_procedure(
    $_id: String!
        $name: String
        $departmentId: [String]
        $laboratoryId: [String]
        $organisationId: String
        $createdBy: String
) {
    update_procedure(
        _id: $_id
        name: $name
        departmentId: $departmentId
        laboratoryId: $laboratoryId
        organisationId: $organisationId
        createdBy: $createdBy
    ) {
        _id
        name
        procedureNumber
        procedureDetials
        departmentId
        laboratoryId
        assectId
        userId
        isActive
        isDeleted
        createdAt
        updatedAt
    }
}
`;
