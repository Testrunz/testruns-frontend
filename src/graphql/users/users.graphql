import { gql } from '@apollo/client';

export const GET_USER = gql`
query Get_all_users($page: Int!, $perPage: Int!, $sortBy: String, $sortOrder: String, $searchBy: String, $search: String) {
    get_all_users(page: $page, perPage: $perPage, sortBy: $sortBy, sortOrder: $sortOrder, searchBy: $searchBy, search: $search) {
        pageInfo {
            currentPage
            totalPages
            totalCount
            hasNextPage
            hasPreviousPage
        }
        Identity {
            _id
            firstName
            lastName
            organisationId
            email
            role
            phoneNumber
            isActive
            isDeleted
            createdAt
            updatedAt
            
            
        }
        pageInfo {
            currentPage
            totalPages
            totalCount
            hasNextPage
            hasPreviousPage
        }
    }
}
`; 
export const POST_USER = gql`
mutation Create_user(
       $uid: String!
       $firstName:String!
       $lastName:String!
       $departmentId:[String]
       $laboratoryId:[String]
       $organisationId:String!
       $email:String!
       $role:String!
       $phoneNumber:String
       $instituteId: String !
    
) {
    create_user(
        uid:$uid
        firstName:$firstName
        lastName:$lastName
        departmentId:$departmentId
        laboratoryId:$laboratoryId
        organisationId:$organisationId
        email:$email
        role:$role
        phoneNumber:$phoneNumber
        instituteId:$instituteId
        
    )  {identitys {
            _id
            uid
            firstName
            lastName
            departmentId
            laboratoryId
            organisationId
            email
            role
            phoneNumber
            isActive
            isDeleted
            createdAt
            updatedAt
        }
    }
}
`;

export const DELETE_USER = gql`
mutation Delete_user($_id: [String]!) {
    delete_user(_id: $_id) {
        data
    }
}
`;
export const UPDATE_USER = gql`
mutation  update_user(
       $_id:String!
       $firstName:String
       $lastName:String
       $departmentId:[String]
       $laboratoryId:[String]
       $organisationId:String
       $email:String
       $role:String
       $phoneNumber:String
    ) {
    update_user(
        _id:$_id
        firstName:$firstName
        lastName:$lastName
        departmentId:$departmentId
        laboratoryId:$laboratoryId
        organisationId:$organisationId
        email:$email
        role:$role
        phoneNumber:$phoneNumber
    ) {
        _id
        uid
        firstName
        lastName
        departmentId
        laboratoryId
        organisationId
        email
        role
        phoneNumber
        isActive
        isDeleted
        createdAt
        updatedAt
    }
}
`;
export const GET_SINGLE_USER = gql`
query Get_user($_id: String!) {
    get_user(_id: $_id) {
        _id
        firstName
        lastName
        departmentId
        laboratoryId
        organisationId
        email
        role
        phoneNumber
        isActive
        isDeleted
        createdAt
        updatedAt
    }
}
`;
export const LOGIN_USER = gql`
mutation VerifyToken($idToken:String!) {
    verifyToken(idToken: $idToken) {
        _id
        uid
        firstName
        lastName
        departmentId
        laboratoryId
        organisationId
        email
        imageUrl
        role
        phoneNumber
        isActive
        isDeleted
        createdAt
        updatedAt
    }
}
`;